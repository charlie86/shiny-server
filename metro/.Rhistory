) %>%
gather(touch, url) %>%
mutate(site = str_replace_all(url, '(https://www\\.)|(\\.com.*)', ''),
campaign = str_replace_all(url, '.*utm_campaign=', ''),
campaign = str_replace_all(campaign, '&.*', ''))
df <- tibble(
first = first_click_url,
second = second_click_url,
third = third_click_url
) %>%
gather(touch, url) %>%
mutate(site = str_replace_all(url, '(https://www\\.)|(\\.com.*)', ''),
campaign = str_replace_all(url, '.*utm_campaign=', ''),
campaign = str_replace_all(campaign, '&.*', ''))
df$campaign
df <- tibble(
first = first_click_url,
second = second_click_url,
third = third_click_url
) %>%
gather(touch, url) %>%
mutate(site = str_replace_all(url, '(https://www\\.)|(\\.com.*)', ''),
campaign = str_replace_all(url, '.*utm_campaign=', ''))
df$campaign
df <- tibble(
first = first_click_url,
second = second_click_url,
third = third_click_url
) %>%
gather(touch, url) %>%
mutate(site = str_replace_all(url, '(https://www\\.)|(\\.com.*)', ''),
has_utm_campaign = str_detect(url, 'utm_campaign'),
campaign = ifelse(has_utm_campaign, str_replace_all(url, '.*utm_campaign=', ''), NA))
df$campaign
df <- tibble(
first = first_click_url,
second = second_click_url,
third = third_click_url
) %>%
gather(touch, url) %>%
mutate(site = str_replace_all(url, '(https://www\\.)|(\\.com.*)', ''),
has_utm_campaign = str_detect(url, 'utm_campaign'),
campaign = ifelse(has_utm_campaign, str_replace_all(url, '.*utm_campaign=', ''), NA),
campaign = str_replace_all(campaign, '&.*', ''))
df$campaign
campaign_test_df <- filter(df, has_utm_campaign)
campaign_test_df
map_df(1:nrow(campaign_test_df), function(x) {
campaign_test_df$campaign[x]
})
map(1:nrow(campaign_test_df), function(x) {
campaign_test_df$campaign[x]
})
sites <- c('videoblocks', 'graphicstock', 'audioblocks')
match(sites, 'videoblocks')
match('videoblocks', sites)
df <- tibble(
first = first_click_url,
second = second_click_url,
third = third_click_url
) %>%
gather(touch, url) %>%
mutate(site = str_replace_all(url, '(https://www\\.)|(\\.com.*)', ''),
site_id = match(site, sites),
has_utm_campaign = str_detect(url, 'utm_campaign'),
campaign = ifelse(has_utm_campaign, str_replace_all(url, '.*utm_campaign=', ''), NA),
campaign = str_replace_all(campaign, '&.*', ''))
df
df$site
df$site_id
short_sites <- c('vb', 'gs', 'ab')
df <- tibble(
first = first_click_url,
second = second_click_url,
third = third_click_url
) %>%
gather(touch, url) %>%
mutate(site = str_replace_all(url, '(https://www\\.)|(\\.com.*)', ''),
site_id = match(site, sites),
sort_site = match(site, short_sites),
has_utm_campaign = str_detect(url, 'utm_campaign'),
campaign = ifelse(has_utm_campaign, str_replace_all(url, '.*utm_campaign=', ''), NA),
campaign = str_replace_all(campaign, '&.*', ''))
count(df, site, site_id, short_sites)
count(df, site, site_id, short_site)
df <- tibble(
first = first_click_url,
second = second_click_url,
third = third_click_url
) %>%
gather(touch, url) %>%
mutate(site = str_replace_all(url, '(https://www\\.)|(\\.com.*)', ''),
site_id = match(site, sites),
short_site = match(site, short_sites),
has_utm_campaign = str_detect(url, 'utm_campaign'),
campaign = ifelse(has_utm_campaign, str_replace_all(url, '.*utm_campaign=', ''), NA),
campaign = str_replace_all(campaign, '&.*', ''))
count(df, site, site_id, short_site)
df <- tibble(
first = first_click_url,
second = second_click_url,
third = third_click_url
) %>%
gather(touch, url) %>%
mutate(site = str_replace_all(url, '(https://www\\.)|(\\.com.*)', ''),
site_id = match(site, sites),
short_site = match(site_id, short_sites),
has_utm_campaign = str_detect(url, 'utm_campaign'),
campaign = ifelse(has_utm_campaign, str_replace_all(url, '.*utm_campaign=', ''), NA),
campaign = str_replace_all(campaign, '&.*', ''))
count(df, site, site_id, short_site)
df <- tibble(
first = first_click_url,
second = second_click_url,
third = third_click_url
) %>%
gather(touch, url) %>%
mutate(site = str_replace_all(url, '(https://www\\.)|(\\.com.*)', ''),
site_id = match(site, sites),
short_site = match(short_sites, site_id),
has_utm_campaign = str_detect(url, 'utm_campaign'),
campaign = ifelse(has_utm_campaign, str_replace_all(url, '.*utm_campaign=', ''), NA),
campaign = str_replace_all(campaign, '&.*', ''))
match(1, 'vb')
index(1, 'vb')
short_sites[1]
df <- tibble(
first = first_click_url,
second = second_click_url,
third = third_click_url
) %>%
gather(touch, url) %>%
mutate(site = str_replace_all(url, '(https://www\\.)|(\\.com.*)', ''),
site_id = match(site, sites),
short_site = short_sites[site_id],
has_utm_campaign = str_detect(url, 'utm_campaign'),
campaign = ifelse(has_utm_campaign, str_replace_all(url, '.*utm_campaign=', ''), NA),
campaign = str_replace_all(campaign, '&.*', ''))
count(df, site, site_id, short_site)
campaign_test_df <- filter(df, has_utm_campaign)
count(campaign_test_df, site, site_id, short_site)
query <- paste0("SELECT * FROM event.", short_site, "_multi_touch WHERE utm_campaign = '", campaign, "'")
map(1:nrow(campaign_test_df), function(x) {
query <- paste0("SELECT * FROM event.", campaign_test_df$short_site[x], "_multi_touch WHERE utm_campaign = '", campaign_test_df$campaign[x], "'")
})
map_df(1:2, function(x) {
# map_df(1:nrow(campaign_test_df), function(x) {
query <- paste0("SELECT DISTINCT vid FROM event.", campaign_test_df$short_site[x], "_multi_touch WHERE utm_campaign = '", campaign_test_df$campaign[x], "'")
res <- vbQuery(query, 'prod')
list(
vid = res
)
})
map_df(1:2, function(x) {
# map_df(1:nrow(campaign_test_df), function(x) {
query <- paste0("SELECT DISTINCT vid AS vid FROM event.", campaign_test_df$short_site[x], "_multi_touch WHERE utm_campaign = '", campaign_test_df$campaign[x], "'")
res <- vbQuery(query, 'prod')
list(
vid = res
)
})
map_df(1:2, function(x) {
# map_df(1:nrow(campaign_test_df), function(x) {
query <- paste0("SELECT DISTINCT vid AS vid FROM event.", campaign_test_df$short_site[x], "_multi_touch WHERE utm_campaign = '", campaign_test_df$campaign[x], "'")
res <- vbQuery(query, 'prod')
list(
vid = res$vid
)
})
vids <- map_df(1:nrow(campaign_test_df), function(x) {
query <- paste0("SELECT DISTINCT vid AS vid FROM event.", campaign_test_df$short_site[x], "_multi_touch WHERE utm_campaign = '", campaign_test_df$campaign[x], "'")
res <- vbQuery(query, 'prod')
list(
vid = res$vid
)
})
library(vb)
library(tidyverse)
vbPeek('marketing.campaign_data')
shiny::runApp('Side Projects/midnight barber/shiny-server/sentify')
song <- track_df %>% slice(1)
energy <- song$energy
valence <- song$valence
classify_track_sentiment <- function(valence, energy) {
if (valence >= .5) {
if (energy >= .5) {
return('Happy')
} else {
return('Peaceful')
}
} else {
if (energy >= .5) {
return('Angry')
} else {
return('Sad')
}
}
}
track_df %>%
mutate(sentiment = classify_track_sentiment(valence, energy))
track_df %>%
rowwise %>%
mutate(sentiment = classify_track_sentiment(valence, energy))
track_df %>%
rowwise %>%
mutate(sentiment = classify_track_sentiment(valence, energy)) %>%
count(sentiment)
track_df %>%
rowwise %>%
mutate(sentiment = classify_track_sentiment(valence, energy)) %>%
ungroup %>%
count(sentiment)
track_df %>%
rowwise %>%
mutate(sentiment = classify_track_sentiment(valence, energy)) %>%
ungroup %>%
count(sentiment)
shiny::runApp('Side Projects/midnight barber/shiny-server/sentify')
runApp('Side Projects/midnight barber/shiny-server/sentify')
head(track_df)
classify_track_sentiment <- function(valence, energy) {
if (valence >= .5) {
if (energy >= .5) {
return('Happy')
} else {
return('Peaceful')
}
} else {
if (energy >= .5) {
return('Angry')
} else {
return('Sad')
}
}
}
track_df %>%
mutate(sentiment = classify_track_sentiment(valence, energy))
track_df %>%
rowwise %>%
mutate(sentiment = classify_track_sentiment(valence, energy)) %>%
ungroup %>%
count(playlist_name, sentiment)
track_df %>%
rowwise %>%
mutate(sentiment = classify_track_sentiment(valence, energy)) %>%
ungroup %>%
count(playlist_name, sentiment) %>%
mutate(pct = n / sum(n))
track_df %>%
rowwise %>%
mutate(sentiment = classify_track_sentiment(valence, energy)) %>%
ungroup %>%
count(playlist_name, sentiment) %>%
mutate(pct = round(n / sum(n), 2))
track_df %>%
rowwise %>%
mutate(sentiment = classify_track_sentiment(valence, energy)) %>%
ungroup %>%
count(playlist_name, sentiment) %>%
mutate(pct = round(n / sum(n), 2)) %>%
hchart(hcaes(x = sentiment, y = pct, group = playlist_name), type = 'column')
track_df %>%
rowwise %>%
mutate(sentiment = classify_track_sentiment(valence, energy)) %>%
ungroup %>%
count(playlist_name, sentiment) %>%
mutate(pct = round(n / sum(n), 2)) %>%
hchart(hcaes(x = playlist_name, y = pct, group = sentiment), type = 'column')
track_df %>%
rowwise %>%
mutate(sentiment = classify_track_sentiment(valence, energy)) %>%
ungroup %>%
count(playlist_name, sentiment) %>%
mutate(pct = round(n / sum(n), 2)) %>%
hchart(hcaes(x = playlist_name, y = pct, group = sentiment), type = 'pie')
track_df %>%
rowwise %>%
mutate(sentiment = classify_track_sentiment(valence, energy)) %>%
ungroup %>%
count(playlist_name, sentiment) %>%
mutate(pct = round(n / sum(n), 2)) %>%
ungroup %>%
hchart(hcaes(x = playlist_name, y = pct, group = sentiment), type = 'pie')
track_df %>%
rowwise %>%
mutate(sentiment = classify_track_sentiment(valence, energy)) %>%
ungroup %>%
count(playlist_name, sentiment) %>%
mutate(pct = round(n / sum(n), 2)) %>%
ungroup %>%
hchart(hcaes(x = sentiment, y = pct, group = playlist_name), type = 'pie')
track_df %>%
rowwise %>%
mutate(sentiment = classify_track_sentiment(valence, energy)) %>%
ungroup %>%
count(playlist_name, sentiment) %>%
mutate(pct = round(n / sum(n), 2)) %>%
ungroup %>%
hchart(hcaes(x = sentiment, y = pct), type = 'pie')
unique(track_df$playlist_img)
unique(track_df$playlist_name)
track_df %>%
rowwise %>%
mutate(sentiment = classify_track_sentiment(valence, energy)) %>%
ungroup %>%
count(playlist_name, sentiment) %>%
mutate(pct = round(n / sum(n), 2)) %>%
ungroup %>%
filter(playlist_name == '2012 Campaign Playlist') %>%
hchart(hcaes(x = sentiment, y = pct), type = 'pie')
track_df %>%
rowwise %>%
mutate(sentiment = classify_track_sentiment(valence, energy)) %>%
ungroup %>%
count(playlist_name, sentiment) %>%
mutate(pct = round(n / sum(n), 2)) %>%
ungroup %>%
hchart(hcaes(x = playlist_name, y = pct, group = sentimnet), type = 'column')
track_df %>%
rowwise %>%
mutate(sentiment = classify_track_sentiment(valence, energy)) %>%
ungroup %>%
count(playlist_name, sentiment) %>%
mutate(pct = round(n / sum(n), 2)) %>%
ungroup %>%
hchart(hcaes(x = playlist_name, y = pct, group = sentiment), type = 'column')
track_df %>%
rowwise %>%
mutate(sentiment = classify_track_sentiment(valence, energy)) %>%
ungroup %>%
count(playlist_name, sentiment) %>%
mutate(pct = round(n / sum(n), 2)) %>%
ungroup %>%
hchart(hcaes(x = playlist_name, y = pct, group = sentiment), type = 'column') %>%
hc_add_theme(hc_theme_smpl())
track_df %>%
rowwise %>%
mutate(sentiment = classify_track_sentiment(valence, energy)) %>%
ungroup %>%
count(playlist_name, sentiment) %>%
mutate(pct = round(n / sum(n), 2)) %>%
ungroup
track_df %>%
rowwise %>%
mutate(sentiment = classify_track_sentiment(valence, energy)) %>%
ungroup %>%
count(playlist_name, sentiment) %>%
mutate(pct = round(n / sum(n), 2)) %>%
ungroup %>%
hchart(hcaes(x = playlist_name, y = pct, group = sentiment), type = 'bar') %>%
hc_add_theme(hc_theme_smpl())
playlist_profiles <- track_df %>%
rowwise %>%
mutate(sentiment = classify_track_sentiment(valence, energy)) %>%
ungroup %>%
count(playlist_name, sentiment)
playlist_profiles
playlist_profiles <- track_df %>%
rowwise %>%
mutate(sentiment = classify_track_sentiment(valence, energy)) %>%
ungroup %>%
count(playlist_name, sentiment) %>%
mutate(pct = round(n / sum(n), 2)) %>%
ungroup
user_profile <- playlist_profiles %>%
count(sentiment)
user_profile
sentiment_profiles <- track_df %>%
rowwise %>%
mutate(sentiment = classify_track_sentiment(valence, energy)) %>%
ungroup
sentiment_profiles <- track_df %>%
rowwise %>%
mutate(sentiment = classify_track_sentiment(valence, energy)) %>%
ungroup
playlist_profiles <- sentiment_profiles %>%
count(playlist_name, sentiment) %>%
mutate(pct = round(n / sum(n), 2)) %>%
ungroup
playlist_profiles
sentiment_profiles
user_profile <- sentiment_profiles %>%
count(sentiment) %>%
mutate(pct = round(n / sum(n), 2)) %>%
ungroup
user_profile
user_profile <- sentiment_profiles %>%
count(sentiment) %>%
mutate(pct = round(n / sum(n), 2)) %>%
ungroup %>%
mutate(playlist_name = 'All')
user_profile
all_profiles <- rbind(user_profile, playlist_profiles)
all_profiles
all_profiles %>%
hchart(hcaes(x = playlist_name, y = pct, group = sentiment), type = 'bar') %>%
hc_add_theme(hc_theme_smpl())
all_profiles %>%
hchart(hcaes(x = playlist_name, y = pct, group = sentiment), type = 'bar') %>%
hc_add_theme(hc_theme_smpl())
all_profiles %>%
hchart(hcaes(x = playlist_name, y = pct, group = sentiment), type = 'bar') %>%
hc_add_theme(hc_theme_smpl()) %>%
hc_xAxis(title = list(''))
all_profiles %>%
hchart(hcaes(x = playlist_name, y = pct, group = sentiment), type = 'bar') %>%
hc_add_theme(hc_theme_smpl()) %>%
hc_xAxis(title = list(text = ''))
sentiment_profile_chart <- function(track_df) {
sentiment_profiles <- track_df %>%
rowwise %>%
mutate(sentiment = classify_track_sentiment(valence, energy)) %>%
ungroup
playlist_profiles <- sentiment_profiles %>%
count(playlist_name, sentiment) %>%
mutate(pct = round(n / sum(n), 2)) %>%
ungroup
user_profile <- sentiment_profiles %>%
count(sentiment) %>%
mutate(pct = round(n / sum(n), 2)) %>%
ungroup %>%
mutate(playlist_name = 'All')
all_profiles <- rbind(user_profile, playlist_profiles)
all_profiles %>%
hchart(hcaes(x = playlist_name, y = pct, group = sentiment), type = 'bar') %>%
hc_add_theme(hc_theme_smpl()) %>%
hc_xAxis(title = list(text = '')) %>%
hc_colors(c('red', 'green', 'lightblue', 'blue'))
}
runApp('Side Projects/midnight barber/shiny-server/sentify')
runApp('Side Projects/midnight barber/shiny-server/sentify')
runApp('Side Projects/midnight barber/shiny-server/sentify')
runApp('Side Projects/midnight barber/shiny-server/sentify')
runApp('Side Projects/midnight barber/shiny-server/sentify')
runApp('Side Projects/midnight barber/shiny-server/sentify')
runApp('Side Projects/midnight barber/shiny-server/sentify')
mtcars %>% mutate_('newvar' = 'hi')
mtcars %>% mutate_('newvar' = '"hi"')
runApp('Side Projects/midnight barber/shiny-server/sentify')
head(track_df)
rm(list = ls())
runApp('Side Projects/midnight barber/shiny-server/sentify')
runApp('Side Projects/midnight barber/shiny-server/sentify')
runApp('Side Projects/midnight barber/shiny-server/sentify')
vbPeek('stockblocks_master.step1_member_campaign_profiles')
library(vb)
vbPeek('stockblocks_master.step1_member_campaign_profiles')
vbPeek('stockblocks_master.user_lead_campaign_profiles')
vbPeek('stockblocks_master.step1_member_campaign_profiles')
vbPeek('stockblocks_master.step1_members')
vbPeek('stockblocks_master.user_leads')
vbPeek('abtesting.abtest_visitor_metrics')
library(httr)
library(dplyr)
library(RMySQL)
metrics <- c('metro_incidents' = 'https://api.wmata.com/Incidents.svc/json/Incidents',
'metro_predictions' = 'https://api.wmata.com/StationPrediction.svc/json/GetPrediction/All',
'metro_line_info' = 'https://api.wmata.com/Rail.svc/json/jLines',
'metro_stations' = 'https://api.wmata.com/Rail.svc/json/jStations')
conn <- dbConnect(MySQL(),
user = 'rcharlie',
password = 'charlie86',
dbname = 'rcharlie',
host = "rcharlie.ch74fm7hgclb.us-west-2.rds.amazonaws.com")
pull <- function(url) {
query <- content(GET(url, query = list(api_key = 'c69abd486c4343879f5e73f9272008dd')))[[1]]
my_time <- Sys.time()
do.call(rbind, lapply(seq_len(length(query)), function(x) {
tmp <- query[[x]]
lapply(names(tmp), function(y) {
if (is.null(tmp[[y]])) {
tmp[[y]] <<- NA
}
}) %>% invisible
tmp %>% as.data.frame() %>%
mutate(time = my_time)
}))
}
lapply(metrics, function(x) {
pull(x) %>% dbWriteTable(conn, names(metrics[metrics == x]), ., append = T, overwrite = F)
}) %>% invisible
db_list_tables(conn)
dbGetQuery('select * from metro_stations')
dbGetQuery(conn, 'select * from metro_stations')
shiny::runApp('Side Projects/midnight barber/shiny-server/metro')
runApp('Side Projects/midnight barber/shiny-server/metro')
runApp('Side Projects/midnight barber/shiny-server/metro')
runApp('Side Projects/midnight barber/shiny-server/metro')
runApp('Side Projects/midnight barber/shiny-server/metro')
shiny::runApp('Side Projects/midnight barber/shiny-server/metro')
runApp('Side Projects/midnight barber/shiny-server/metro')
runApp('Side Projects/midnight barber/shiny-server/metro')
runApp('Side Projects/midnight barber/shiny-server/metro')
test$Line
unique(test$Line)
test %>% filter(is.na(Line))
unique(test$Line)
runApp('Side Projects/midnight barber/shiny-server/metro')
head(test$Min)
unique(test$Min)
test %>% filter(is.na(Min))
runApp('Side Projects/midnight barber/shiny-server/metro')
runApp('Side Projects/midnight barber/shiny-server/metro')
?selectizeInput
runApp('Side Projects/midnight barber/shiny-server/metro')
runApp('Side Projects/midnight barber/shiny-server/metro')
runApp('Side Projects/midnight barber/shiny-server/metro')
runApp('Side Projects/midnight barber/shiny-server/metro')
runApp('Side Projects/midnight barber/shiny-server/metro')
?div
runApp('Side Projects/midnight barber/shiny-server/metro')
runApp('Side Projects/midnight barber/shiny-server/metro')
