zIndex = 2))) %>%
hc_add_series(data = plot_labels,
name = 'annotations',
type = 'scatter',
color = 'transparent',
showInLegend = FALSE,
enableMouseTracking = FALSE,
zIndex = 0,
dataLabels = list(enabled = TRUE, y = 10, format = "{point.text}",
style = list(fontSize = "18px",
color =  '#000',
textOutline = '0px'))
)
hchart(artist_plot_df, hcaes(x = xvar, y = yvar, group = cluster), type = 'scatter') %>%
hc_tooltip(formatter = JS(paste0("function() {return this.point.tooltip;}")), useHTML = T) %>%
hc_colors(color = pal) %>%
hc_xAxis(max = 1, title = list(text = 'Instrumentalness + Danceability')) %>%
hc_yAxis(max = 1, title = list(text = 'Acousticness - Valence')) %>%
hc_add_theme(hc_theme_smpl()) %>%
hc_yAxis(plotLines = list(list(
value = .5,
color = 'black',
width = 2,
zIndex = 2))) %>%
hc_xAxis(plotLines = list(list(
value = .5,
color = 'black',
width = 2,
zIndex = 2)))
artist_plot_df <- artist_features %>%
mutate(cluster = paste0('Cluster #', clust),
tooltip = artist_name,
xvar = rescale(instrumentalness + danceability, to = c(0, 1)),
yvar = rescale(acousticness - energy, to = c(0, 1)))
artist_plot_df %>%
filter(artist_name %in% c('Radiohead', 'Lady Gaga', 'Kendrick Lamar')) %>%
select(artist_name, cluster)
hchart(artist_plot_df, hcaes(x = xvar, y = yvar, group = cluster), type = 'scatter') %>%
hc_tooltip(formatter = JS(paste0("function() {return this.point.tooltip;}")), useHTML = T) %>%
hc_colors(color = pal) %>%
hc_xAxis(max = 1, title = list(text = 'Instrumentalness + Danceability')) %>%
hc_yAxis(max = 1, title = list(text = 'Acousticness - Valence')) %>%
hc_add_theme(hc_theme_smpl()) %>%
hc_yAxis(plotLines = list(list(
value = .5,
color = 'black',
width = 2,
zIndex = 2))) %>%
hc_xAxis(plotLines = list(list(
value = .5,
color = 'black',
width = 2,
zIndex = 2)))
cluster_labels <- c('Hip-hop/Rock', 'EDM/Experimental', 'Alternative/Acoustic')
artist_plot_df <- artist_features %>%
mutate(cluster = paste0('Cluster #', clust, ' - ', cluster_labels[clust]),
tooltip = artist_name,
xvar = rescale(instrumentalness + danceability, to = c(0, 1)),
yvar = rescale(acousticness - energy, to = c(0, 1)))
artist_plot_df %>%
filter(artist_name %in% c('Radiohead', 'Lady Gaga', 'Kendrick Lamar')) %>%
select(artist_name, cluster)
hchart(artist_plot_df, hcaes(x = xvar, y = yvar, group = cluster), type = 'scatter') %>%
hc_tooltip(formatter = JS(paste0("function() {return this.point.tooltip;}")), useHTML = T) %>%
hc_colors(color = pal) %>%
hc_xAxis(max = 1, title = list(text = 'Instrumentalness + Danceability')) %>%
hc_yAxis(max = 1, title = list(text = 'Acousticness - Valence')) %>%
hc_add_theme(hc_theme_smpl()) %>%
hc_yAxis(plotLines = list(list(
value = .5,
color = 'black',
width = 2,
zIndex = 2))) %>%
hc_xAxis(plotLines = list(list(
value = .5,
color = 'black',
width = 2,
zIndex = 2)))
hchart(hplot, hcaes(x = PC1, y = PC2, group = cluster), type = 'scatter') %>%
hc_add_series_list(dfcomp) %>%
hc_colors(color = c(pal, rep('lightblue', nrow(pca$rotation)))) %>%
hc_tooltip(shared = F, formatter = JS(paste0("function() {var text = ''; if ([", paste0("'", unique(hplot$cluster), "'", collapse = ', '),"].indexOf(this.series.name) >= 0) {text = this.point.tooltip;} else {text = this.series.name;}return text;}"))) %>%
hc_title(text = 'The Three Types of Coachella 2017 Artists') %>%
hc_subtitle(text = HTML('<em>Clustering of their top tracks on Spotify</em>')) %>%
hc_xAxis(title = list(text = 'Principle Component 1')) %>%
hc_yAxis(title = list(text = 'Principle Component 2')) %>%
hc_add_theme(hc_theme_smpl())
hplot <- (pca$x[, 1:2] / lam) %>%
as.data.frame %>%
mutate(name = artist_features$artist_name,
cluster = paste0('Cluster #', clust, ' - ', cluster_labels[clust]),
tooltip = name)
dfobs <- (pca$x[, 1:2] / lam) %>%
as.data.frame
dfcomp <- pca$rotation[, 1:2] * lam
mx <- max(abs(dfobs[, 1:2]))
mc <- max(abs(dfcomp))
dfcomp <- dfcomp %>%
{ . / mc * mx } %>%
as.data.frame() %>%
setNames(c("x", "y")) %>%
rownames_to_column("name") %>%
as_data_frame() %>%
group_by_("name") %>%
do(data = list(c(0, 0), c(.$x, .$y))) %>%
list_parse
pal <- brewer.pal(3, 'Dark2')
library(htmlwidgets)
hchart(hplot, hcaes(x = PC1, y = PC2, group = cluster), type = 'scatter') %>%
hc_add_series_list(dfcomp) %>%
hc_colors(color = c(pal, rep('lightblue', nrow(pca$rotation)))) %>%
hc_tooltip(shared = F, formatter = JS(paste0("function() {var text = ''; if ([", paste0("'", unique(hplot$cluster), "'", collapse = ', '),"].indexOf(this.series.name) >= 0) {text = this.point.tooltip;} else {text = this.series.name;}return text;}"))) %>%
hc_title(text = 'The Three Types of Coachella 2017 Artists') %>%
hc_subtitle(text = HTML('<em>Clustering of their top tracks on Spotify</em>')) %>%
hc_xAxis(title = list(text = 'Principle Component 1')) %>%
hc_yAxis(title = list(text = 'Principle Component 2')) %>%
hc_add_theme(hc_theme_smpl()) #%>%
library(htmlwidgets)
hchart(hplot, hcaes(x = PC1, y = PC2, group = cluster), type = 'scatter') %>%
hc_add_series_list(dfcomp) %>%
hc_colors(color = c(pal, rep('lightblue', nrow(pca$rotation)))) %>%
hc_tooltip(shared = F, formatter = JS(paste0("function() {var text = ''; if ([", paste0("'", unique(hplot$cluster), "'", collapse = ', '),"].indexOf(this.series.name) >= 0) {text = this.point.tooltip;} else {text = this.series.name;}return text;}"))) %>%
hc_title(text = 'The Three Types of Coachella 2017 Artists') %>%
hc_subtitle(text = HTML('<em>Clustering of their top tracks on Spotify</em>')) %>%
hc_xAxis(title = list(text = 'Principle Component 1')) %>%
hc_yAxis(title = list(text = 'Principle Component 2')) %>%
hc_add_theme(hc_theme_smpl()) %>%
saveWidget('C:/Users/Charlie/Documents/Side Projects/midnight barber/charlie86.github.io/htmlwidgets/coachellar/pca_cluster.html')
hplot <- (pca$x[, 1:2] / lam) %>%
as.data.frame %>%
mutate(name = artist_features$artist_name,
cluster = paste0('Cluster #', clust),
tooltip = name)
dfobs <- (pca$x[, 1:2] / lam) %>%
as.data.frame
dfcomp <- pca$rotation[, 1:2] * lam
mx <- max(abs(dfobs[, 1:2]))
mc <- max(abs(dfcomp))
dfcomp <- dfcomp %>%
{ . / mc * mx } %>%
as.data.frame() %>%
setNames(c("x", "y")) %>%
rownames_to_column("name") %>%
as_data_frame() %>%
group_by_("name") %>%
do(data = list(c(0, 0), c(.$x, .$y))) %>%
list_parse
pal <- brewer.pal(3, 'Dark2')
library(htmlwidgets)
hchart(hplot, hcaes(x = PC1, y = PC2, group = cluster), type = 'scatter') %>%
hc_add_series_list(dfcomp) %>%
hc_colors(color = c(pal, rep('lightblue', nrow(pca$rotation)))) %>%
hc_tooltip(shared = F, formatter = JS(paste0("function() {var text = ''; if ([", paste0("'", unique(hplot$cluster), "'", collapse = ', '),"].indexOf(this.series.name) >= 0) {text = this.point.tooltip;} else {text = this.series.name;}return text;}"))) %>%
hc_title(text = 'The Three Types of Coachella 2017 Artists') %>%
hc_subtitle(text = HTML('<em>Clustering of their top tracks on Spotify</em>')) %>%
hc_xAxis(title = list(text = 'Principle Component 1')) %>%
hc_yAxis(title = list(text = 'Principle Component 2')) %>%
hc_add_theme(hc_theme_smpl()) #%>%
# saveWidget('C:/Users/Charlie/Documents/Side Projects/midnight barber/charlie86.github.io/htmlwidgets/coachellar/pca_cluster.html')
cluster_labels <- c('Hip-hop/Rock', 'EDM/Experimental', 'Alternative/Acoustic')
artist_plot_df <- artist_features %>%
mutate(cluster = paste0('Cluster #', clust, ' - ', cluster_labels[clust]),
tooltip = artist_name,
xvar = rescale(instrumentalness + danceability, to = c(0, 1)),
yvar = rescale(acousticness - energy, to = c(0, 1)))
artist_plot_df %>%
filter(artist_name %in% c('Radiohead', 'Lady Gaga', 'Kendrick Lamar')) %>%
select(artist_name, cluster)
hchart(artist_plot_df, hcaes(x = xvar, y = yvar, group = cluster), type = 'scatter') %>%
hc_tooltip(formatter = JS(paste0("function() {return this.point.tooltip;}")), useHTML = T) %>%
hc_colors(color = pal) %>%
hc_xAxis(max = 1, title = list(text = 'Instrumentalness + Danceability')) %>%
hc_yAxis(max = 1, title = list(text = 'Acousticness - Valence')) %>%
hc_add_theme(hc_theme_smpl()) %>%
hc_yAxis(plotLines = list(list(
value = .5,
color = 'black',
width = 2,
zIndex = 2))) %>%
hc_xAxis(plotLines = list(list(
value = .5,
color = 'black',
width = 2,
zIndex = 2)))
hchart(artist_plot_df, hcaes(x = xvar, y = yvar, group = cluster), type = 'scatter') %>%
hc_tooltip(formatter = JS(paste0("function() {return this.point.tooltip;}")), useHTML = T) %>%
hc_colors(color = pal) %>%
hc_xAxis(max = 1, title = list(text = 'Instrumentalness + Danceability')) %>%
hc_yAxis(max = 1, title = list(text = 'Acousticness - Valence')) %>%
hc_add_theme(hc_theme_smpl()) %>%
hc_yAxis(plotLines = list(list(
value = .5,
color = 'black',
width = 2,
zIndex = 2))) %>%
hc_xAxis(plotLines = list(list(
value = .5,
color = 'black',
width = 2,
zIndex = 2))) %>%
saveWidget('C:/Users/Charlie/Documents/Side Projects/midnight barber/charlie86.github.io/htmlwidgets/coachellar/exploratory_plot.html')
hchart(hplot, hcaes(x = PC1, y = PC2, group = cluster), type = 'scatter') %>%
hc_add_series_list(dfcomp) %>%
hc_colors(color = c(pal, rep('lightblue', nrow(pca$rotation)))) %>%
hc_tooltip(shared = F, formatter = JS(paste0("function() {var text = ''; if ([", paste0("'", unique(hplot$cluster), "'", collapse = ', '),"].indexOf(this.series.name) >= 0) {text = this.point.tooltip;} else {text = this.series.name;}return text;}"))) %>%
hc_title(text = 'Clustering Coachella') %>%
hc_subtitle(text = HTML('<em>PCA and clusters of artist tracks on Spotify</em>')) %>%
hc_xAxis(title = list(text = 'Principle Component 1')) %>%
hc_yAxis(title = list(text = 'Principle Component 2')) %>%
hc_add_theme(hc_theme_smpl()) %>%
saveWidget('C:/Users/Charlie/Documents/Side Projects/midnight barber/charlie86.github.io/htmlwidgets/coachellar/pca_cluster.html')
hchart(artist_plot_df, hcaes(x = xvar, y = yvar, group = cluster), type = 'scatter') %>%
hc_tooltip(formatter = JS(paste0("function() {return this.point.tooltip;}")), useHTML = T) %>%
hc_colors(color = pal) %>%
hc_xAxis(max = 1, title = list(text = 'Instrumentalness + Danceability')) %>%
hc_yAxis(max = 1, title = list(text = 'Acousticness - Valence')) %>%
hc_add_theme(hc_theme_smpl()) %>%
hc_yAxis(plotLines = list(list(
value = .5,
color = 'black',
width = 2,
zIndex = 2))) %>%
hc_xAxis(plotLines = list(list(
value = .5,
color = 'black',
width = 2,
zIndex = 2))) %>%
hc_title('The Three Types of Artists at Coachella 2017') %>%
hc_subtitle(text = HTML('<em>Clustering of their top tracks on Spotify</em>')) %>%
saveWidget('C:/Users/Charlie/Documents/Side Projects/midnight barber/charlie86.github.io/htmlwidgets/coachellar/exploratory_plot.html')
hchart(artist_plot_df, hcaes(x = xvar, y = yvar, group = cluster), type = 'scatter') %>%
hc_tooltip(formatter = JS(paste0("function() {return this.point.tooltip;}")), useHTML = T) %>%
hc_colors(color = pal) %>%
hc_xAxis(max = 1, title = list(text = 'Instrumentalness + Danceability')) %>%
hc_yAxis(max = 1, title = list(text = 'Acousticness - Valence')) %>%
hc_add_theme(hc_theme_smpl()) %>%
hc_yAxis(plotLines = list(list(
value = .5,
color = 'black',
width = 2,
zIndex = 2))) %>%
hc_xAxis(plotLines = list(list(
value = .5,
color = 'black',
width = 2,
zIndex = 2))) %>%
hc_title(text = 'The Three Types of Artists at Coachella 2017') %>%
hc_subtitle(text = HTML('<em>Clustering of their top tracks on Spotify</em>')) %>%
saveWidget('C:/Users/Charlie/Documents/Side Projects/midnight barber/charlie86.github.io/htmlwidgets/coachellar/exploratory_plot.html')
hchart(artist_plot_df, hcaes(x = xvar, y = yvar, group = cluster), type = 'scatter') %>%
hc_tooltip(formatter = JS(paste0("function() {return this.point.tooltip;}")), useHTML = T) %>%
hc_colors(color = pal) %>%
hc_xAxis(max = 1, title = list(text = 'Instrumentalness + Danceability')) %>%
hc_yAxis(max = 1, title = list(text = 'Acousticness - Valence')) %>%
hc_add_theme(hc_theme_smpl()) %>%
hc_yAxis(plotLines = list(list(
value = .5,
color = 'black',
width = 2,
zIndex = 2))) %>%
hc_xAxis(plotLines = list(list(
value = .5,
color = 'black',
width = 2,
zIndex = 2))) %>%
hc_title(text = 'The Three Types of Artists at Coachella 2017') %>%
hc_subtitle(text = HTML('<em>Clustering of their top tracks on Spotify</em>'))
hchart(hplot, hcaes(x = PC1, y = PC2, group = cluster), type = 'scatter') %>%
hc_add_series_list(dfcomp) %>%
hc_colors(color = c(pal, rep('lightblue', nrow(pca$rotation)))) %>%
hc_tooltip(shared = F, formatter = JS(paste0("function() {var text = ''; if ([", paste0("'", unique(hplot$cluster), "'", collapse = ', '),"].indexOf(this.series.name) >= 0) {text = this.point.tooltip;} else {text = this.series.name;}return text;}"))) %>%
hc_title(text = 'Clustering Coachella') %>%
hc_subtitle(text = HTML('<em>PCA and clusters of artist tracks on Spotify</em>')) %>%
hc_xAxis(title = list(text = 'Principle Component 1')) %>%
hc_yAxis(title = list(text = 'Principle Component 2')) %>%
hc_add_theme(hc_theme_smpl())
scatterplot3js(pca$x[, 1:3], color = pal[clust], labels = hplot$name, renderer = 'canvas')
?scatterplot3js
scatterplot3js(pca$x[, 1:3], color = pal[clust], labels = hplot$name, renderer = 'canvas')
51435*.75
51435*.75/60
51435*.75/60/24
library(vb)
vbQuery("select sum(NULL, 1,3)")
vbQuery("select sum(NA,1,3)")
vbQuery("select sum(null,1,3)")
vbQuery("select * from stockblocks_master.member_payments where payment_status = 'refund' and subscription_purchase_amount = 0 limit 5")
vbQuery("select * from stockblocks_master.member_payments where payment_status = 'success' and subscription_purchase_amount = 0 limit 5")
vbQuery("select subscription_purchase_amount, count(*) from stockblocks_master.member_payments where payment_status = 'refund' group by 1 limit 20")
vbQuery("select subscription_purchase_amount, count(*) from stockblocks_master.member_payments where payment_status = 'refund' and subscription_purchase_amount is null group by 1 limit 20")
vbQuery("select * from stockblocks_master.member_payments where payment_status = 'refund' and subscription_purchase_amount is null group by 1 limit 20")
vbQuery("select * from stockblocks_master.member_payments where payment_status = 'refund' and subscription_purchase_amount is null limit 20")
vbQuery("select * from
stockblocks_master.member_payments mp
LEFT JOIN stockblocks_master.member_payment_details mpd
ON mp.site_member_payment_id = mpd.site_member_payment_id
where mpd.is_chargeback = 0
and mp.subscription_purchase_amount = 0
and mp.marketplace_purchase_amount = 0
limit 7")
vbQuery("select * from
stockblocks_master.member_payments mp
LEFT JOIN stockblocks_master.member_payment_details mpd
ON mp.site_member_payment_id = mpd.site_member_payment_id
where mpd.is_chargeback = 1
and mp.subscription_purchase_amount = 0
and mp.marketplace_purchase_amount = 0
limit 7")
vbQuery("select * from
stockblocks_master.member_payments mp
LEFT JOIN stockblocks_master.member_payment_details mpd
ON mp.site_member_payment_id = mpd.site_member_payment_id
where mpd.is_chargeback = 1
limit 7")
vbQuery("select * from
stockblocks_master.member_payments mp
LEFT JOIN stockblocks_master.member_payment_details mpd
ON mp.site_member_payment_id = mpd.site_member_payment_id
where mpd.is_chargeback = 1
and mp.subscription_purchase_amount = 0
limit 7")
vbQuery("select * from
stockblocks_master.member_payments mp
LEFT JOIN stockblocks_master.member_payment_details mpd
ON mp.site_member_payment_id = mpd.site_member_payment_id
where mpd.is_chargeback = 1
and mp.marketplace_purchase_amount = 0
limit 7")
vbQuery("select * from
stockblocks_master.member_payments mp
LEFT JOIN stockblocks_master.member_payment_details mpd
ON mp.site_member_payment_id = mpd.site_member_payment_id
where mpd.is_chargeback = 1
and mp.subscription_purchase_amount = 0
and mp.marketplace_purchase_amount is null
limit 7")
vbQuery("select * from
stockblocks_master.member_payments mp
LEFT JOIN stockblocks_master.member_payment_details mpd
ON mp.site_member_payment_id = mpd.site_member_payment_id
where mpd.is_chargeback = 1
and coalesce(mp.subscription_purchase_amount, 0) = 0
and coalesce(mp.marketplace_purchase_amount, 0) =0
limit 7")
vbQuery("select * from stockblocks_master.member_payments where id = 1000889")
vbQuery("select * from stockblocks_master.member_payments where member_id = 619173")
vbQuery("select * from
stockblocks_master.member_payments mp
LEFT JOIN stockblocks_master.member_payment_details mpd
ON mp.site_member_payment_id = mpd.site_member_payment_id
where mpd.is_chargeback = 1
and coalesce(mp.subscription_purchase_amount, 0) > 0
limit 7")
vbQuery("select * from stockblocks_master.member_payments where id = 292326")
vbQuery("select * from
stockblocks_master.member_payments mp
LEFT JOIN stockblocks_master.member_payment_details mpd
ON mp.site_member_payment_id = mpd.site_member_payment_id
where mp.site_id = 1
and mp.member_id = 166492
and coalesce(mp.subscription_purchase_amount, 0) > 0
limit 7")
shiny::runApp('VideoBlocks/shiny-server/ab_test')
head(visitors_tbl$gs_xsell_refund_amount)
visitors_tbl$sub_chargebacks
runApp('VideoBlocks/shiny-server/ab_test')
rm(list =ls())
runApp('VideoBlocks/shiny-server/ab_test')
rm(list = ls())
runApp('VideoBlocks/shiny-server/ab_test')
runApp('VideoBlocks/shiny-server/ab_test')
make.vb_xsell_subscription_refunds(visitors_tbl)
make.gs_xsell_subscription_refunds(visitors_tbl)
make.ab_xsell_subscription_refunds(visitors_tbl)
rm(list = ls())
runApp('VideoBlocks/shiny-server/ab_test')
make.total_xsell_subscription_refunds(visitors_tbl)
make.vb_xsell_subscription_refunds(visitors_tbl)
rm(list = ls())
runApp('VideoBlocks/shiny-server/ab_test')
make.vb_xsell_subscription_refunds(visitors_tbl)
make.total_xsell_subscription_refunds(visitors_tbl)
runApp('VideoBlocks/shiny-server/ab_test')
runApp('VideoBlocks/shiny-server/ab_test')
runApp('VideoBlocks/shiny-server/ab_test')
runApp('VideoBlocks/shiny-server/ab_test')
visitors_tbl$sub_chargebacks
runApp('VideoBlocks/shiny-server/ab_test')
rm(list = ls())
runApp('VideoBlocks/shiny-server/ab_test')
library(highcharter)
library(tidyverse)
library(leaflet)
library(RMySQL)
library(lubridate)
library(stringr)
setwd('C:/Users/Charlie/Documents/Side Projects/midnight barber/shiny-server/bikeshare/')
conn <- dbConnect(MySQL(),
user = 'rcharlie',
password = 'charlie86',
dbname = 'rcharlie',
host = "rcharlie.ch74fm7hgclb.us-west-2.rds.amazonaws.com")
dbSendQuery(conn, "DROP TABLE IF EXISTS bikeshare_deduped;")
dbSendQuery(conn, "
CREATE TABLE bikeshare_deduped (
station_id INT
, bikes INT
, docks INT
, last_updated TIMESTAMP);")
dbSendQuery(conn, "CREATE INDEX station_id ON bikeshare_deduped (station_id);")
a <- Sys.time()
dbSendQuery(conn, "
INSERT INTO bikeshare_deduped
SELECT
DISTINCT `terminalName` AS station_id
, `nbBikes` AS bikes
, `nbEmptyDocks` AS docks
, `latestUpdateTime` AS last_updated
FROM bikeshare_stations;")
b <- Sys.time()
b-a
library(vb)
library(vb)
query <- "
select count(*), sum(revenue), sum(refunds)
from abtesting.abtest_all_metric_details t
where
step2_plan_id in (4102, 21020, 21021)
and t.site_id = 1
and t.test_id = 698
"
vbQuery(query, 'prod')
vbPeek('abtesting.abtest_all_metric_details')
vbQuery('select max(date_added) from abtesting.abtest_all_metric_details')
vbQuery('select max(date_added) from abtesting.abtest_all_metric_details', 'prod')
library(vb)
query <- "
select count(*), sum(revenue), sum(refunds)
from abtesting.abtest_all_metric_details t
where
step2_plan_id in (4102, 21020, 21021)
and t.site_id = 1
and t.test_id = 698
and member_id is not null
"
vbQuery(query, 'prod')
library(vb)
query <- "
select *
from abtesting.abtest_all_metric_details t
where
step2_plan_id in (4102, 21020, 21021)
and t.site_id = 1
and t.test_id = 698
and member_id is not null
"
vbQuery(query, 'prod')
test = vbQuery(query, 'prod')
head(test)
unique(test$refunds)
unique(test$revenue)
query <- "
select count(*) from abtesting.abtest_visitor_metrics t
where
and t.site_id = 1
and t.test_id = 698
and member_id is not null
"
test = vbQuery(query, 'prod')
library(vb)
query <- "
select count(*) from abtesting.abtest_visitor_metrics t
where
t.site_id = 1
and t.test_id = 698
and member_id is not null
"
test = vbQuery(query, 'prod')
test
library(vb)
query <- "
select count(*), sum(sub_revenue) from abtesting.abtest_visitor_metrics t
where
t.site_id = 1
and t.test_id = 698
and member_id is not null
"
test = vbQuery(query, 'prod')
test
vbPeek('abtesting.abtest_visitor_metrics')
library(vb)
query <- "
SELECT
count(*)
, sum(sub_revenue)
, sum(sub_refund_amount)
FROM abtesting.abtest_visitor_metrics ab
INNER JOIN stockblocks_master.members m
ON ab.site_member_id = m.site_member_id
INNER JOIN stockblocks_master.plans p
ON m.site_id = p.site_id
AND m.first_billing_plan = p.id
WHERE site_test_id = 1698
AND p.id IN (4102, 21020, 21021)
"
test = vbQuery(query, 'prod')
test
111978/829
test = vbQuery(query, 'prod')
vbQuery(query, 'prod')
test = vbQuery(query, 'prod')
test
