hc_tooltip(shared = F, formatter = JS(paste0("function() {var text = ''; if ([", paste0(unique(clust), collapse = ', '),"].indexOf(this.series.name) >= 0) {text = this.point.tooltip;} else {text = this.series.name;}return text;}"))) %>%
hc_title(text = 'The Five Types of Coachella 2017 Artists') %>%
hc_subtitle(text = HTML('<em>Principle component analysis and clustering of their top tracks on Spotify</em>')) %>%
hc_add_theme(hc_theme_smpl())
count(clust)
count(artist_means, cluster)
count(hplot, cluster)
hc <- artist_means %>%
select(match(feature_vars, names(.))) %>%
mutate_all(funs(rescale(., to = c(0,1)))) %>%
as.matrix %>%
dist %>%
hclust
# kmeans(3)
clust <- cutree(hc, k = 8)
# clust <- hc$cluster
# hc$labels <- artist_means$artist_name
# hchart(artist_means %>% mutate(cluster = clust), hcaes(x = valence, y = energy, group = cluster), type = 'scatter')
pca <- artist_means %>%
select(match(feature_vars, names(.))) %>%
mutate_all(funs(rescale(., to = c(0,1)))) %>%
as.matrix %>%
princomp
pca <- prcomp(artist_means[, feature_vars] %>% na.omit, scale = T)
lam <- pca$sdev[1:2]
lam <- lam * sqrt(nrow(pca$x))
hplot <- (pca$x[, 1:2] / lam) %>%
as.data.frame %>%
mutate(name = artist_means$artist_name,
cluster = clust,
tooltip = paste0('<b>Artist:</b> ', name))
dfobs <- (pca$x[, 1:2] / lam) %>%
as.data.frame
dfcomp <- pca$rotation[, 1:2] * lam
mx <- max(abs(dfobs[, 1:2]))
mc <- max(abs(dfcomp))
dfcomp <- dfcomp %>%
{ . / mc * mx } %>%
as.data.frame() %>%
setNames(c("x", "y")) %>%
rownames_to_column("name") %>%
as_data_frame() %>%
group_by_("name") %>%
do(data = list(c(0, 0), c(.$x, .$y))) %>%
list_parse
hchart(hplot, hcaes(x = PC1, y = PC2, group = cluster), type = 'scatter') %>%
hc_add_series_list(dfcomp) %>%
hc_colors(color = c(tol21rainbow[1:n_distinct(clust)], rep('lightblue', nrow(pca$rotation)))) %>%
hc_tooltip(shared = F, formatter = JS(paste0("function() {var text = ''; if ([", paste0(unique(clust), collapse = ', '),"].indexOf(this.series.name) >= 0) {text = this.point.tooltip;} else {text = this.series.name;}return text;}"))) %>%
hc_title(text = 'The Five Types of Coachella 2017 Artists') %>%
hc_subtitle(text = HTML('<em>Principle component analysis and clustering of their top tracks on Spotify</em>')) %>%
hc_add_theme(hc_theme_smpl())
hc <- artist_means %>%
select(match(feature_vars, names(.))) %>%
mutate_all(funs(rescale(., to = c(0,1)))) %>%
as.matrix %>%
dist %>%
# hclust
kmeans(5)
# clust <- cutree(hc, k = 8)
# clust <- hc$cluster
# hc$labels <- artist_means$artist_name
# hchart(artist_means %>% mutate(cluster = clust), hcaes(x = valence, y = energy, group = cluster), type = 'scatter')
pca <- artist_means %>%
select(match(feature_vars, names(.))) %>%
mutate_all(funs(rescale(., to = c(0,1)))) %>%
as.matrix %>%
princomp
pca <- prcomp(artist_means[, feature_vars] %>% na.omit, scale = T)
lam <- pca$sdev[1:2]
lam <- lam * sqrt(nrow(pca$x))
hplot <- (pca$x[, 1:2] / lam) %>%
as.data.frame %>%
mutate(name = artist_means$artist_name,
cluster = clust,
tooltip = paste0('<b>Artist:</b> ', name))
dfobs <- (pca$x[, 1:2] / lam) %>%
as.data.frame
dfcomp <- pca$rotation[, 1:2] * lam
mx <- max(abs(dfobs[, 1:2]))
mc <- max(abs(dfcomp))
dfcomp <- dfcomp %>%
{ . / mc * mx } %>%
as.data.frame() %>%
setNames(c("x", "y")) %>%
rownames_to_column("name") %>%
as_data_frame() %>%
group_by_("name") %>%
do(data = list(c(0, 0), c(.$x, .$y))) %>%
list_parse
hchart(hplot, hcaes(x = PC1, y = PC2, group = cluster), type = 'scatter') %>%
hc_add_series_list(dfcomp) %>%
hc_colors(color = c(tol21rainbow[1:n_distinct(clust)], rep('lightblue', nrow(pca$rotation)))) %>%
hc_tooltip(shared = F, formatter = JS(paste0("function() {var text = ''; if ([", paste0(unique(clust), collapse = ', '),"].indexOf(this.series.name) >= 0) {text = this.point.tooltip;} else {text = this.series.name;}return text;}"))) %>%
hc_title(text = 'The Five Types of Coachella 2017 Artists') %>%
hc_subtitle(text = HTML('<em>Principle component analysis and clustering of their top tracks on Spotify</em>')) %>%
hc_add_theme(hc_theme_smpl())
hc <- artist_means %>%
select(match(feature_vars, names(.))) %>%
mutate_all(funs(rescale(., to = c(0,1)))) %>%
as.matrix %>%
dist %>%
# hclust
kmeans(5)
# clust <- cutree(hc, k = 8)
clust <- hc$cluster
# hc$labels <- artist_means$artist_name
# hchart(artist_means %>% mutate(cluster = clust), hcaes(x = valence, y = energy, group = cluster), type = 'scatter')
pca <- artist_means %>%
select(match(feature_vars, names(.))) %>%
mutate_all(funs(rescale(., to = c(0,1)))) %>%
as.matrix %>%
princomp
pca <- prcomp(artist_means[, feature_vars] %>% na.omit, scale = T)
lam <- pca$sdev[1:2]
lam <- lam * sqrt(nrow(pca$x))
hplot <- (pca$x[, 1:2] / lam) %>%
as.data.frame %>%
mutate(name = artist_means$artist_name,
cluster = clust,
tooltip = paste0('<b>Artist:</b> ', name))
dfobs <- (pca$x[, 1:2] / lam) %>%
as.data.frame
dfcomp <- pca$rotation[, 1:2] * lam
mx <- max(abs(dfobs[, 1:2]))
mc <- max(abs(dfcomp))
dfcomp <- dfcomp %>%
{ . / mc * mx } %>%
as.data.frame() %>%
setNames(c("x", "y")) %>%
rownames_to_column("name") %>%
as_data_frame() %>%
group_by_("name") %>%
do(data = list(c(0, 0), c(.$x, .$y))) %>%
list_parse
hchart(hplot, hcaes(x = PC1, y = PC2, group = cluster), type = 'scatter') %>%
hc_add_series_list(dfcomp) %>%
hc_colors(color = c(tol21rainbow[1:n_distinct(clust)], rep('lightblue', nrow(pca$rotation)))) %>%
hc_tooltip(shared = F, formatter = JS(paste0("function() {var text = ''; if ([", paste0(unique(clust), collapse = ', '),"].indexOf(this.series.name) >= 0) {text = this.point.tooltip;} else {text = this.series.name;}return text;}"))) %>%
hc_title(text = 'The Five Types of Coachella 2017 Artists') %>%
hc_subtitle(text = HTML('<em>Principle component analysis and clustering of their top tracks on Spotify</em>')) %>%
hc_add_theme(hc_theme_smpl())
hc <- artist_means %>%
select(match(feature_vars, names(.))) %>%
mutate_all(funs(rescale(., to = c(0,1)))) %>%
as.matrix %>%
dist %>%
# hclust
kmeans(5)
artist_means <- tracks %>%
mutate(mode = as.numeric(mode)) %>%
group_by(artist_name, image_url) %>%
summarise(danceability = mean(danceability),
valence = mean(valence),
energy = mean(energy),
mode = mean(mode),
key = n_distinct(key) / n(),
tempo = mean(tempo),
loudness = mean(loudness),
speechiness = mean(speechiness),
instrumentalness = mean(instrumentalness),
liveness = mean(liveness)) %>%
ungroup
hc <- artist_means %>%
select(match(feature_vars, names(.)))
match(feature_vars, names(artist_means))
match(names(artist_means), feature_vars)
mutate(mode = as.numeric(mode)) %>%
group_by(artist_name, image_url) %>%
summarise(danceability = mean(danceability),
valence = mean(valence),
energy = mean(energy),
mode = mean(mode),
key = n_distinct(key) / n(),
tempo = mean(tempo),
loudness = mean(loudness),
speechiness = mean(speechiness),
instrumentalness = mean(instrumentalness),
liveness = mean(liveness)) %>%
ungroup
artist_means <- tracks %>%
mutate(mode = as.numeric(mode)) %>%
group_by(artist_name, image_url) %>%
summarise(danceability = mean(danceability),
valence = mean(valence),
energy = mean(energy),
mode = mean(mode),
key = n_distinct(key) / n(),
tempo = mean(tempo),
loudness = mean(loudness),
speechiness = mean(speechiness),
instrumentalness = mean(instrumentalness),
liveness = mean(liveness)) %>%
ungroup
artist_means %>%
select(match(feature_vars, names(.)))
names(artist_means)
names(feature_vars)
feature_vars
artist_means <- tracks %>%
mutate(mode = as.numeric(mode)) %>%
group_by(artist_name, image_url) %>%
summarise(danceability = mean(danceability),
valence = mean(valence),
energy = mean(energy),
mode = mean(mode),
key = n_distinct(key) / n(),
tempo = mean(tempo),
loudness = mean(loudness),
speechiness = mean(speechiness),
acousticness = mean(acousticness),
duration_ms = mean(duration_ms),
instrumentalness = mean(instrumentalness),
liveness = mean(liveness)) %>%
ungroup
hc <- artist_means %>%
select(match(feature_vars, names(.))) %>%
mutate_all(funs(rescale(., to = c(0,1)))) %>%
as.matrix %>%
dist %>%
# hclust
kmeans(5)
# clust <- cutree(hc, k = 8)
clust <- hc$cluster
# hc$labels <- artist_means$artist_name
# hchart(artist_means %>% mutate(cluster = clust), hcaes(x = valence, y = energy, group = cluster), type = 'scatter')
pca <- artist_means %>%
select(match(feature_vars, names(.))) %>%
mutate_all(funs(rescale(., to = c(0,1)))) %>%
as.matrix %>%
princomp
pca <- prcomp(artist_means[, feature_vars] %>% na.omit, scale = T)
lam <- pca$sdev[1:2]
lam <- lam * sqrt(nrow(pca$x))
hplot <- (pca$x[, 1:2] / lam) %>%
as.data.frame %>%
mutate(name = artist_means$artist_name,
cluster = clust,
tooltip = paste0('<b>Artist:</b> ', name))
dfobs <- (pca$x[, 1:2] / lam) %>%
as.data.frame
dfcomp <- pca$rotation[, 1:2] * lam
mx <- max(abs(dfobs[, 1:2]))
mc <- max(abs(dfcomp))
dfcomp <- dfcomp %>%
{ . / mc * mx } %>%
as.data.frame() %>%
setNames(c("x", "y")) %>%
rownames_to_column("name") %>%
as_data_frame() %>%
group_by_("name") %>%
do(data = list(c(0, 0), c(.$x, .$y))) %>%
list_parse
hchart(hplot, hcaes(x = PC1, y = PC2, group = cluster), type = 'scatter') %>%
hc_add_series_list(dfcomp) %>%
hc_colors(color = c(tol21rainbow[1:n_distinct(clust)], rep('lightblue', nrow(pca$rotation)))) %>%
hc_tooltip(shared = F, formatter = JS(paste0("function() {var text = ''; if ([", paste0(unique(clust), collapse = ', '),"].indexOf(this.series.name) >= 0) {text = this.point.tooltip;} else {text = this.series.name;}return text;}"))) %>%
hc_title(text = 'The Five Types of Coachella 2017 Artists') %>%
hc_subtitle(text = HTML('<em>Principle component analysis and clustering of their top tracks on Spotify</em>')) %>%
hc_add_theme(hc_theme_smpl())
library(scatterplot3d)
library(car)
pca$x[, 1:3]
scatter3d(x = pca$x[, 1], y = pca$x[, 2], z = pca$x[, 3], groups = clust, grid = F, surface = F)
scatter3d(x = pca$x[, 1], y = pca$x[, 2], z = pca$x[, 3], groups = as.factor(clust), grid = F, surface = F)
library(threejs)
z <- seq(-10, 10, 0.1)
x <- cos(z)
y <- sin(z)
scatterplot3js(x,y,z, color=rainbow(length(z)),
labels=sprintf("x=%.2f, y=%.2f, z=%.2f", x, y, z))
scatterplot3js(pca$x[, 1:3], color=rainbow(length(z)))
RColorBrewer::brewer.pal.info
brewer.pal(5, 'dark')
library(RColorBrewer)
brewer.pal(5, 'Darks')
brewer.pal(5, 'dark2')
brewer.pal(5, 'Dark2')
clusters
clust
pal <- brewer.pal(5, 'Dark2')
pal[clust]
scatterplot3js(pca$x[, 1:3], color=pal[clust])
scatterplot3js(pca$x[, 1:3], color=pal[clust],
labels=hplot$name)
?scatterplot3js
scatterplot3js(pca$x[, 1:3], color=pal[clust],
labels=hplot$name, renderer = 'webgl')
scatterplot3js(pca$x[, 1:3], color=pal[clust],
labels=hplot$name, renderer = 'canvas')
threed <- scatterplot3js(pca$x[, 1:3], color=pal[clust], labels=hplot$name, renderer = 'canvas')
class(threed)
hchart(hplot, hcaes(x = PC1, y = PC2, group = cluster), type = 'scatter') %>%
hc_add_series_list(dfcomp) %>%
hc_colors(color = c(tol21rainbow[1:n_distinct(clust)], rep('lightblue', nrow(pca$rotation)))) %>%
hc_tooltip(shared = F, formatter = JS(paste0("function() {var text = ''; if ([", paste0(unique(clust), collapse = ', '),"].indexOf(this.series.name) >= 0) {text = this.point.tooltip;} else {text = this.series.name;}return text;}"))) %>%
hc_title(text = 'The Five Types of Coachella 2017 Artists') %>%
hc_subtitle(text = HTML('<em>Principle component analysis and clustering of their top tracks on Spotify</em>')) %>%
hc_add_theme(hc_theme_smpl())
hchart(hplot, hcaes(x = PC1, y = PC2, group = cluster), type = 'scatter') %>%
hc_add_series_list(dfcomp) %>%
hc_colors(color = c(pal, rep('lightblue', nrow(pca$rotation)))) %>%
hc_tooltip(shared = F, formatter = JS(paste0("function() {var text = ''; if ([", paste0(unique(clust), collapse = ', '),"].indexOf(this.series.name) >= 0) {text = this.point.tooltip;} else {text = this.series.name;}return text;}"))) %>%
hc_title(text = 'The Five Types of Coachella 2017 Artists') %>%
hc_subtitle(text = HTML('<em>Principle component analysis and clustering of their top tracks on Spotify</em>')) %>%
hc_add_theme(hc_theme_smpl())
mat <- artist_means %>%
select(match(feature_vars, names(.))) %>%
mutate_all(funs(rescale(., to = c(0,1)))) %>%
as.matrix %>%
dist
kmeans(mat, 5)
test = kmeans(mat, 5)
test$withinss
map_df(2:20, function(x) {
cl <- kmeans(mat, x)
list(
k = x,
wss = cl$withinss
)
})
map_df(2:20, function(x) {
cl <- kmeans(mat, x)
list(
k = x,
wss = sum(cl$withinss)
)
})
map_df(2:20, function(x) {
cl <- kmeans(mat, x)
list(
k = x,
wss = sum(cl$withinss)
)
}) %>%
hchart(aes(x = k, y = wss), type = 'line')
map_df(2:20, function(x) {
cl <- kmeans(mat, x)
list(
k = x,
wss = sum(cl$withinss)
)
}) %>%
hchart(hcaes(x = k, y = wss), type = 'line')
hclust(mat)
plot(hclust(mat))
mat <- artist_means %>%
select(energy, valence, danceability) %>%
# select(match(feature_vars, names(.))) %>%
mutate_all(funs(rescale(., to = c(0,1)))) %>%
as.matrix %>%
dist
plot(hclust(mat))
mat <- artist_means %>%
select(energy, valence, danceability, instrumentalness) %>%
# select(match(feature_vars, names(.))) %>%
mutate_all(funs(rescale(., to = c(0,1)))) %>%
as.matrix %>%
dist
plot(hclust(mat))
mat <- artist_means %>%
select(energy, valence, danceability, mode) %>%
# select(match(feature_vars, names(.))) %>%
mutate_all(funs(rescale(., to = c(0,1)))) %>%
as.matrix %>%
dist
plot(hclust(mat))
mat <- artist_means %>%
select(energy, valence, danceability) %>%
# select(match(feature_vars, names(.))) %>%
mutate_all(funs(rescale(., to = c(0,1)))) %>%
as.matrix %>%
dist
plot(hclust(mat))
map_df(2:20, function(x) {
cl <- kmeans(mat, x)
list(
k = x,
wss = sum(cl$withinss)
)
}) %>%
hchart(hcaes(x = k, y = wss), type = 'line')
feature_vars
mat <- artist_means %>%
select(energy, valence, danceability, instrumentalness, key, mode) %>%
# select(match(feature_vars, names(.))) %>%
mutate_all(funs(rescale(., to = c(0,1)))) %>%
as.matrix %>%
dist
plot(hclust(mat))
map_df(2:20, function(x) {
cl <- kmeans(mat, x)
list(
k = x,
wss = sum(cl$withinss)
)
}) %>%
hchart(hcaes(x = k, y = wss), type = 'line')
hc <- mat %>%
# hclust
kmeans(6)
clust <- hc$cluster
pca <- artist_means %>%
# select(match(feature_vars, names(.))) %>%
select(energy, valence, danceability, instrumentalness, key, mode) %>%
mutate_all(funs(rescale(., to = c(0,1)))) %>%
as.matrix %>%
princomp
pca <- prcomp(artist_means[, feature_vars] %>% na.omit, scale = T)
lam <- pca$sdev[1:2]
lam <- lam * sqrt(nrow(pca$x))
hplot <- (pca$x[, 1:2] / lam) %>%
as.data.frame %>%
mutate(name = artist_means$artist_name,
cluster = clust,
tooltip = paste0('<b>Artist:</b> ', name))
dfobs <- (pca$x[, 1:2] / lam) %>%
as.data.frame
dfcomp <- pca$rotation[, 1:2] * lam
mx <- max(abs(dfobs[, 1:2]))
mc <- max(abs(dfcomp))
dfcomp <- dfcomp %>%
{ . / mc * mx } %>%
as.data.frame() %>%
setNames(c("x", "y")) %>%
rownames_to_column("name") %>%
as_data_frame() %>%
group_by_("name") %>%
do(data = list(c(0, 0), c(.$x, .$y))) %>%
list_parse
pal <- brewer.pal(6, 'Dark2')
hchart(hplot, hcaes(x = PC1, y = PC2, group = cluster), type = 'scatter') %>%
hc_add_series_list(dfcomp) %>%
hc_colors(color = c(pal, rep('lightblue', nrow(pca$rotation)))) %>%
hc_tooltip(shared = F, formatter = JS(paste0("function() {var text = ''; if ([", paste0(unique(clust), collapse = ', '),"].indexOf(this.series.name) >= 0) {text = this.point.tooltip;} else {text = this.series.name;}return text;}"))) %>%
hc_title(text = 'The Five Types of Coachella 2017 Artists') %>%
hc_subtitle(text = HTML('<em>Principle component analysis and clustering of their top tracks on Spotify</em>')) %>%
hc_add_theme(hc_theme_smpl())
scatterplot3js(pca$x[, 1:3], color=pal[clust], labels=hplot$name, renderer = 'canvas')
map_df(2:20, function(x) {
cl <- kmeans(mat, x)
list(
k = x,
wss = sum(cl$withinss)
)
}) %>%
hchart(hcaes(x = k, y = wss), type = 'line')
mat <- artist_means %>%
select(match(feature_vars, names(.))) %>%
mutate_all(funs(rescale(., to = c(0,1)))) %>%
as.matrix %>%
dist
plot(hclust(mat))
map_df(2:20, function(x) {
cl <- kmeans(mat, x)
list(
k = x,
wss = sum(cl$withinss)
)
}) %>%
hchart(hcaes(x = k, y = wss), type = 'line')
hc <- mat %>%
# hclust
kmeans(6)
# clust <- cutree(hc, k = 8)
clust <- hc$cluster
# hc$labels <- artist_means$artist_name
# hchart(artist_means %>% mutate(cluster = clust), hcaes(x = valence, y = energy, group = cluster), type = 'scatter')
pca <- artist_means %>%
select(match(feature_vars, names(.))) %>%
mutate_all(funs(rescale(., to = c(0,1)))) %>%
as.matrix %>%
princomp
pca <- prcomp(artist_means[, feature_vars] %>% na.omit, scale = T)
lam <- pca$sdev[1:2]
lam <- lam * sqrt(nrow(pca$x))
hplot <- (pca$x[, 1:2] / lam) %>%
as.data.frame %>%
mutate(name = artist_means$artist_name,
cluster = clust,
tooltip = paste0('<b>Artist:</b> ', name))
dfobs <- (pca$x[, 1:2] / lam) %>%
as.data.frame
dfcomp <- pca$rotation[, 1:2] * lam
mx <- max(abs(dfobs[, 1:2]))
mc <- max(abs(dfcomp))
dfcomp <- dfcomp %>%
{ . / mc * mx } %>%
as.data.frame() %>%
setNames(c("x", "y")) %>%
rownames_to_column("name") %>%
as_data_frame() %>%
group_by_("name") %>%
do(data = list(c(0, 0), c(.$x, .$y))) %>%
list_parse
pal <- brewer.pal(6, 'Dark2')
hchart(hplot, hcaes(x = PC1, y = PC2, group = cluster), type = 'scatter') %>%
hc_add_series_list(dfcomp) %>%
hc_colors(color = c(pal, rep('lightblue', nrow(pca$rotation)))) %>%
hc_tooltip(shared = F, formatter = JS(paste0("function() {var text = ''; if ([", paste0(unique(clust), collapse = ', '),"].indexOf(this.series.name) >= 0) {text = this.point.tooltip;} else {text = this.series.name;}return text;}"))) %>%
hc_title(text = 'The Five Types of Coachella 2017 Artists') %>%
hc_subtitle(text = HTML('<em>Principle component analysis and clustering of their top tracks on Spotify</em>')) %>%
hc_add_theme(hc_theme_smpl())
scatterplot3js(pca$x[, 1:3], color=pal[clust], labels=hplot$name, renderer = 'canvas')
hchart(hplot, hcaes(x = PC1, y = PC2, group = cluster), type = 'scatter') %>%
hc_add_series_list(dfcomp) %>%
hc_colors(color = c(pal, rep('lightblue', nrow(pca$rotation)))) %>%
hc_tooltip(shared = F, formatter = JS(paste0("function() {var text = ''; if ([", paste0(unique(clust), collapse = ', '),"].indexOf(this.series.name) >= 0) {text = this.point.tooltip;} else {text = this.series.name;}return text;}"))) %>%
hc_title(text = 'The Six Types of Coachella 2017 Artists') %>%
hc_subtitle(text = HTML('<em>Principle component analysis and clustering of their top tracks on Spotify</em>')) %>%
hc_add_theme(hc_theme_smpl())
scatterplot3js(pca$x[, 1:3], color=pal[clust], labels=hplot$name, renderer = 'canvas')
