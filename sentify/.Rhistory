select(album_name, album_release_date)
albums %>%
mutate(base_album_name = str_replace_all(tolower(album_name), ' \\(.*(deluxe|international|version|edition|remastered|live).*\\)', ''),
base_album_name = str_replace_all(base_album_name, ' \\[.*(deluxe|international|version|edition|remastered|live).*\\]', ''),
base_album_name = str_replace_all(base_album_name, ':.*(deluxe|international|version|edition|remastered|live).*', ''),
base_album_name = str_replace_all(base_album_name, ' - .*(deluxe|international|version|edition|remastered|live).*', '')) %>%
group_by(base_album_name) %>%
filter(album_release_year == min(album_release_year)) %>%
filter(tolower(album_name) == base_album_name | n_distinct(album_name) == 1) %>%
ungroup %>%
arrange(album_release_year) %>%
select(album_name, album_release_date)
albums %>%
mutate(base_album_name = str_replace_all(tolower(album_name), ' \\(.*(deluxe|international|version|edition|remastered|live).*\\)', ''),
base_album_name = str_replace_all(base_album_name, ' \\[.*(deluxe|international|version|edition|remastered|live).*\\]', ''),
base_album_name = str_replace_all(base_album_name, ':.*(deluxe|international|version|edition|remastered|live).*', ''),
base_album_name = str_replace_all(base_album_name, ' - .*(deluxe|international|version|edition|remastered|live).*', '')) %>%
group_by(base_album_name) %>%
# filter(album_release_year == min(album_release_year)) %>%
# filter(tolower(album_name) == base_album_name | n_distinct(album_name) == 1) %>%
ungroup %>%
arrange(album_release_year) %>%
select(album_name, album_release_date)
albums %>%
mutate(base_album_name = str_replace_all(tolower(album_name), ' \\(.*(deluxe|international|version|edition|remastered|live).*\\)', ''),
base_album_name = str_replace_all(base_album_name, ' \\[.*(deluxe|international|version|edition|remastered|live).*\\]', ''),
base_album_name = str_replace_all(base_album_name, ':.*(deluxe|international|version|edition|remastered|live).*', ''),
base_album_name = str_replace_all(base_album_name, ' - .*(deluxe|international|version|edition|remastered|live).*', '')) %>%
group_by(base_album_name) %>%
filter(tolower(album_name) == base_album_name | n_distinct(album_name) == 1) %>%
ungroup %>%
arrange(album_release_year) %>%
select(album_name, album_release_date)
albums %>%
mutate(base_album_name = str_replace_all(tolower(album_name), ' \\(.*(deluxe|international|version|edition|remastered|live).*\\)', ''),
base_album_name = str_replace_all(base_album_name, ' \\[.*(deluxe|international|version|edition|remastered|live).*\\]', ''),
base_album_name = str_replace_all(base_album_name, ':.*(deluxe|international|version|edition|remastered|live).*', ''),
base_album_name = str_replace_all(base_album_name, ' - .*(deluxe|international|version|edition|remastered|live).*', '')) %>%
group_by(base_album_name) %>%
filter(album_release_year == min(album_release_year))
as.Date(1991, '%Y')
as.Date('1991', '%Y')
as.Date('1990', '%Y')
as.Date('1990-01-01', '%Y')
as.Date('1990-01-01', '%Y-%m-%d')
get_albums <- function(artist) {
albums <- GET(paste0('https://api.spotify.com/v1/artists/', artist,'/albums'), query = list(limit = 50)) %>% content
map_df(1:length(albums$items), function(x) {
tmp <- albums$items[[x]]
# Make sure the album_type is not "single"
if (tmp$album_type == 'album' & gsub('spotify:artist:', '', tmp$artists[[1]]$uri) == artist) {
data.frame(album_uri = tmp$uri %>% gsub('spotify:album:', '', .),
album_name = gsub('\'', '', tmp$name),
album_img = albums$items[[x]]$images[[1]]$url,
stringsAsFactors = F) %>%
mutate(album_release_date = GET(paste0('https://api.spotify.com/v1/albums/', tmp$uri %>% gsub('spotify:album:', '', .))) %>% content %>% .$release_date,
album_release_year = ifelse(nchar(album_release_date) == 4, as.Date(paste0(year(as.Date(album_release_date, '%Y')), '-01-01')), as.Date(album_release_date, '%Y-%m-%d'))
)
} else {
NULL
}
}) %>% filter(!duplicated(tolower(album_name))) %>%
albums %>%
mutate(base_album_name = str_replace_all(tolower(album_name), ' \\(.*(deluxe|international|version|edition|remastered|live).*\\)', ''),
base_album_name = str_replace_all(base_album_name, ' \\[.*(deluxe|international|version|edition|remastered|live).*\\]', ''),
base_album_name = str_replace_all(base_album_name, ':.*(deluxe|international|version|edition|remastered|live).*', ''),
base_album_name = str_replace_all(base_album_name, ' - .*(deluxe|international|version|edition|remastered|live).*', '')) %>%
group_by(base_album_name) %>%
filter(tolower(album_name) == base_album_name | n_distinct(album_name) == 1) %>%
ungroup %>%
arrange(album_release_year) %>%
select(album_name, album_release_date) %>%
# Sometimes there are multiple versions (just with different capitalizations) of the same album
arrange(album_release_date) %>%
mutate(album_rank = match(album_name, unique(album_name)))
}
albums <- get_albums(artist$artist_uri)
head(albums)
get_albums <- function(artist) {
albums <- GET(paste0('https://api.spotify.com/v1/artists/', artist,'/albums'), query = list(limit = 50)) %>% content
map_df(1:length(albums$items), function(x) {
tmp <- albums$items[[x]]
# Make sure the album_type is not "single"
if (tmp$album_type == 'album' & gsub('spotify:artist:', '', tmp$artists[[1]]$uri) == artist) {
data.frame(album_uri = tmp$uri %>% gsub('spotify:album:', '', .),
album_name = gsub('\'', '', tmp$name),
album_img = albums$items[[x]]$images[[1]]$url,
stringsAsFactors = F) %>%
mutate(album_release_date = GET(paste0('https://api.spotify.com/v1/albums/', tmp$uri %>% gsub('spotify:album:', '', .))) %>% content %>% .$release_date,
album_release_year = ifelse(nchar(album_release_date) == 4, as.Date(paste0(year(as.Date(album_release_date, '%Y')), '-01-01')), as.Date(album_release_date, '%Y-%m-%d'))
)
} else {
NULL
}
}) %>% filter(!duplicated(tolower(album_name))) %>%
# albums %>%
# mutate(base_album_name = str_replace_all(tolower(album_name), ' \\(.*(deluxe|international|version|edition|remastered|live).*\\)', ''),
#        base_album_name = str_replace_all(base_album_name, ' \\[.*(deluxe|international|version|edition|remastered|live).*\\]', ''),
#        base_album_name = str_replace_all(base_album_name, ':.*(deluxe|international|version|edition|remastered|live).*', ''),
#        base_album_name = str_replace_all(base_album_name, ' - .*(deluxe|international|version|edition|remastered|live).*', '')) %>%
# group_by(base_album_name) %>%
# filter(tolower(album_name) == base_album_name | n_distinct(album_name) == 1) %>%
# ungroup %>%
# arrange(album_release_year) %>%
# select(album_name, album_release_date) %>%
# Sometimes there are multiple versions (just with different capitalizations) of the same album
arrange(album_release_date) %>%
mutate(album_rank = match(album_name, unique(album_name)))
}
albums <- get_albums(artist$artist_uri)
head(albums)
as.Date(8895)
as.Date(8895, origin = '1970-01-01')
get_albums <- function(artist) {
albums <- GET(paste0('https://api.spotify.com/v1/artists/', artist,'/albums'), query = list(limit = 50)) %>% content
map_df(1:length(albums$items), function(x) {
tmp <- albums$items[[x]]
# Make sure the album_type is not "single"
if (tmp$album_type == 'album' & gsub('spotify:artist:', '', tmp$artists[[1]]$uri) == artist) {
data.frame(album_uri = tmp$uri %>% gsub('spotify:album:', '', .),
album_name = gsub('\'', '', tmp$name),
album_img = albums$items[[x]]$images[[1]]$url,
stringsAsFactors = F) %>%
mutate(album_release_date = GET(paste0('https://api.spotify.com/v1/albums/', tmp$uri %>% gsub('spotify:album:', '', .))) %>% content %>% .$release_date,
album_release_year = as.Date(ifelse(nchar(album_release_date) == 4, as.Date(paste0(year(as.Date(album_release_date, '%Y')), '-01-01')), as.Date(album_release_date, '%Y-%m-%d')), origin = '1970-01-01')
)
} else {
NULL
}
}) %>% filter(!duplicated(tolower(album_name))) %>%
# albums %>%
# mutate(base_album_name = str_replace_all(tolower(album_name), ' \\(.*(deluxe|international|version|edition|remastered|live).*\\)', ''),
#        base_album_name = str_replace_all(base_album_name, ' \\[.*(deluxe|international|version|edition|remastered|live).*\\]', ''),
#        base_album_name = str_replace_all(base_album_name, ':.*(deluxe|international|version|edition|remastered|live).*', ''),
#        base_album_name = str_replace_all(base_album_name, ' - .*(deluxe|international|version|edition|remastered|live).*', '')) %>%
# group_by(base_album_name) %>%
# filter(tolower(album_name) == base_album_name | n_distinct(album_name) == 1) %>%
# ungroup %>%
# arrange(album_release_year) %>%
# select(album_name, album_release_date) %>%
# Sometimes there are multiple versions (just with different capitalizations) of the same album
arrange(album_release_date) %>%
mutate(album_rank = match(album_name, unique(album_name)))
}
albums <- get_albums(artist$artist_uri)
head(albums)
albums %>%
mutate(base_album_name = str_replace_all(tolower(album_name), ' \\(.*(deluxe|international|version|edition|remastered|live).*\\)', ''),
base_album_name = str_replace_all(base_album_name, ' \\[.*(deluxe|international|version|edition|remastered|live).*\\]', ''),
base_album_name = str_replace_all(base_album_name, ':.*(deluxe|international|version|edition|remastered|live).*', ''),
base_album_name = str_replace_all(base_album_name, ' - .*(deluxe|international|version|edition|remastered|live).*', '')) %>%
group_by(base_album_name) %>%
filter(album_release_year == min(album_release_year)) %>%
mutate(base_album = tolower(album_name) == base_album_name,
num_albums = n(),
num_base_albums = sum(base_album)) %>%
filter(n_distinct(album_name) == 1) %>%
ungroup %>%
arrange(album_release_year) %>%
select(album_name, album_release_date)
albums %>%
mutate(base_album_name = str_replace_all(tolower(album_name), ' \\(.*(deluxe|international|version|edition|remastered|live).*\\)', ''),
base_album_name = str_replace_all(base_album_name, ' \\[.*(deluxe|international|version|edition|remastered|live).*\\]', ''),
base_album_name = str_replace_all(base_album_name, ':.*(deluxe|international|version|edition|remastered|live).*', ''),
base_album_name = str_replace_all(base_album_name, ' - .*(deluxe|international|version|edition|remastered|live).*', '')) %>%
group_by(base_album_name) %>%
filter(album_release_year == min(album_release_year)) %>%
mutate(base_album = tolower(album_name) == base_album_name,
num_albums = n(),
num_base_albums = sum(base_album)) %>%
# filter(n_distinct(album_name) == 1) %>%
ungroup %>%
arrange(album_release_year) %>%
select(album_name, album_release_date)
mutate(base_album_name = str_replace_all(tolower(album_name), ' \\(.*(deluxe|international|version|edition|remastered|live).*\\)', ''),
base_album_name = str_replace_all(base_album_name, ' \\[.*(deluxe|international|version|edition|remastered|live).*\\]', ''),
base_album_name = str_replace_all(base_album_name, ':.*(deluxe|international|version|edition|remastered|live).*', ''),
base_album_name = str_replace_all(base_album_name, ' - .*(deluxe|international|version|edition|remastered|live).*', '')) %>%
group_by(base_album_name) %>%
filter(album_release_year == min(album_release_year)) %>%
mutate(base_album = tolower(album_name) == base_album_name,
num_albums = n(),
num_base_albums = sum(base_album)) %>%
filter((num_base_albums == 1, base_album == 1)) %>%
ungroup %>%
arrange(album_release_year) %>%
select(album_name, album_release_date)
albums %>%
mutate(base_album_name = str_replace_all(tolower(album_name), ' \\(.*(deluxe|international|version|edition|remastered|live).*\\)', ''),
base_album_name = str_replace_all(base_album_name, ' \\[.*(deluxe|international|version|edition|remastered|live).*\\]', ''),
base_album_name = str_replace_all(base_album_name, ':.*(deluxe|international|version|edition|remastered|live).*', ''),
base_album_name = str_replace_all(base_album_name, ' - .*(deluxe|international|version|edition|remastered|live).*', '')) %>%
group_by(base_album_name) %>%
filter(album_release_year == min(album_release_year)) %>%
mutate(base_album = tolower(album_name) == base_album_name,
num_albums = n(),
num_base_albums = sum(base_album)) %>%
filter((num_base_albums == 1, base_album == 1)) %>%
ungroup %>%
arrange(album_release_year) %>%
select(album_name, album_release_date)
albums %>%
mutate(base_album_name = str_replace_all(tolower(album_name), ' \\(.*(deluxe|international|version|edition|remastered|live).*\\)', ''),
base_album_name = str_replace_all(base_album_name, ' \\[.*(deluxe|international|version|edition|remastered|live).*\\]', ''),
base_album_name = str_replace_all(base_album_name, ':.*(deluxe|international|version|edition|remastered|live).*', ''),
base_album_name = str_replace_all(base_album_name, ' - .*(deluxe|international|version|edition|remastered|live).*', '')) %>%
group_by(base_album_name) %>%
filter(album_release_year == min(album_release_year)) %>%
mutate(base_album = tolower(album_name) == base_album_name,
num_albums = n(),
num_base_albums = sum(base_album)) %>%
filter((num_base_albums == 1, base_album == 1)) %>%
ungroup %>%
arrange(album_release_year) %>%
select(album_name, album_release_date)
albums %>%
mutate(base_album_name = str_replace_all(tolower(album_name), ' \\(.*(deluxe|international|version|edition|remastered|live).*\\)', ''),
base_album_name = str_replace_all(base_album_name, ' \\[.*(deluxe|international|version|edition|remastered|live).*\\]', ''),
base_album_name = str_replace_all(base_album_name, ':.*(deluxe|international|version|edition|remastered|live).*', ''),
base_album_name = str_replace_all(base_album_name, ' - .*(deluxe|international|version|edition|remastered|live).*', '')) %>%
group_by(base_album_name) %>%
filter(album_release_year == min(album_release_year)) %>%
mutate(base_album = tolower(album_name) == base_album_name,
num_albums = n(),
num_base_albums = sum(base_album)) %>%
filter((num_base_albums == 1 & base_album == 1)) %>%
ungroup %>%
arrange(album_release_year) %>%
select(album_name, album_release_date)
albums %>%
mutate(base_album_name = str_replace_all(tolower(album_name), ' \\(.*(deluxe|international|version|edition|remastered|live).*\\)', ''),
base_album_name = str_replace_all(base_album_name, ' \\[.*(deluxe|international|version|edition|remastered|live).*\\]', ''),
base_album_name = str_replace_all(base_album_name, ':.*(deluxe|international|version|edition|remastered|live).*', ''),
base_album_name = str_replace_all(base_album_name, ' - .*(deluxe|international|version|edition|remastered|live).*', '')) %>%
group_by(base_album_name) %>%
filter(album_release_year == min(album_release_year)) %>%
mutate(base_album = tolower(album_name) == base_album_name,
num_albums = n(),
num_base_albums = sum(base_album)) %>%
# filter((num_base_albums == 1 & base_album == 1)) %>%
ungroup %>%
arrange(album_release_year) %>%
select(album_name, album_release_date)
albums %>%
mutate(base_album_name = str_replace_all(tolower(album_name), ' \\(.*(deluxe|international|version|edition|remastered|live).*\\)', ''),
base_album_name = str_replace_all(base_album_name, ' \\[.*(deluxe|international|version|edition|remastered|live).*\\]', ''),
base_album_name = str_replace_all(base_album_name, ':.*(deluxe|international|version|edition|remastered|live).*', ''),
base_album_name = str_replace_all(base_album_name, ' - .*(deluxe|international|version|edition|remastered|live).*', '')) %>%
group_by(base_album_name) %>%
filter(album_release_year == min(album_release_year)) %>%
mutate(base_album = tolower(album_name) == base_album_name,
num_albums = n(),
num_base_albums = sum(base_album)) %>%
filter((num_base_albums == 1 & base_album == 1) | (num_base_albums == 0)) %>%
ungroup %>%
arrange(album_release_year) %>%
select(album_name, album_release_date)
albums %>%
mutate(base_album_name = str_replace_all(tolower(album_name), ' \\(.*(deluxe|international|version|edition|remastered|live).*\\)', ''),
base_album_name = str_replace_all(base_album_name, ' \\[.*(deluxe|international|version|edition|remastered|live).*\\]', ''),
base_album_name = str_replace_all(base_album_name, ':.*(deluxe|international|version|edition|remastered|live).*', ''),
base_album_name = str_replace_all(base_album_name, ' - .*(deluxe|international|version|edition|remastered|live).*', '')) %>%
group_by(base_album_name) %>%
filter(album_release_year == min(album_release_year)) %>%
mutate(base_album = tolower(album_name) == base_album_name,
num_albums = n(),
num_base_albums = sum(base_album)) %>%
filter((num_base_albums == 1 & base_album == 1) | (num_base_albums == 0 & row_number() == 1)) %>%
ungroup %>%
arrange(album_release_year) %>%
select(album_name, album_release_date)
albums %>%
mutate(base_album_name = str_replace_all(tolower(album_name), ' \\(.*(deluxe|international|version|edition|remastered|live).*\\)', ''),
base_album_name = str_replace_all(base_album_name, ' \\[.*(deluxe|international|version|edition|remastered|live).*\\]', ''),
base_album_name = str_replace_all(base_album_name, ':.*(deluxe|international|version|edition|remastered|live).*', ''),
base_album_name = str_replace_all(base_album_name, ' - .*(deluxe|international|version|edition|remastered|live).*', '')) %>%
group_by(base_album_name) %>%
filter(album_release_year == min(album_release_year)) %>%
mutate(base_album = tolower(album_name) == base_album_name,
num_albums = n(),
num_base_albums = sum(base_album)) %>%
filter((num_base_albums == 1 & base_album == 1) | ((num_base_albums == 0 | num_base_albums > 1) & row_number() == 1)) %>%
ungroup %>%
arrange(album_release_year) %>%
select(album_name, album_release_date)
runApp()
source('~/Side Projects/midnight barber/shiny-server/sentify/helpers.R', echo=TRUE)
runApp()
tol21rainbow
runApp()
runApp()
artist <- get_artists('nirvana') %>% slice(1)
albums <- get_albums(artist$artist_uri)
head(albums)
albums %>%
mutate(base_album_name = str_replace_all(tolower(album_name), ' \\(.*(deluxe|international|version|edition|remastered|live).*\\)', ''),
base_album_name = str_replace_all(base_album_name, ' \\[.*(deluxe|international|version|edition|remastered|live).*\\]', ''),
base_album_name = str_replace_all(base_album_name, ':.*(deluxe|international|version|edition|remastered|live).*', ''),
base_album_name = str_replace_all(base_album_name, ' - .*(deluxe|international|version|edition|remastered|live).*', '')) %>%
group_by(base_album_name) %>%
filter(album_release_year == min(album_release_year))
albums %>%
mutate(base_album_name = str_replace_all(tolower(album_name), ' \\(.*(deluxe|international|version|edition|remastered|live).*\\)', ''),
base_album_name = str_replace_all(base_album_name, ' \\[.*(deluxe|international|version|edition|remastered|live).*\\]', ''),
base_album_name = str_replace_all(base_album_name, ':.*(deluxe|international|version|edition|remastered|live).*', ''),
base_album_name = str_replace_all(base_album_name, ' - .*(deluxe|international|version|edition|remastered|live).*', '')) %>%
group_by(base_album_name) %>%
filter(album_release_year == min(album_release_year)) %>%
mutate(base_album = tolower(album_name) == base_album_name,
num_albums = n(),
num_base_albums = sum(base_album)) %>%
filter((num_base_albums == 1 & base_album == 1) | ((num_base_albums == 0 | num_base_albums > 1) & row_number() == 1)) %>%
ungroup %>%
arrange(album_release_year) %>%
select(album_name, album_release_date)
albums %>%
mutate(base_album_name = str_replace_all(tolower(album_name), ' \\(.*(deluxe|international|version|edition|remastered|live).*\\)', ''),
base_album_name = str_replace_all(base_album_name, ' \\[.*(deluxe|international|version|edition|remastered|live).*\\]', ''),
base_album_name = str_replace_all(base_album_name, ':.*(deluxe|international|version|edition|remastered|live).*', ''),
base_album_name = str_replace_all(base_album_name, ' - .*(deluxe|international|version|edition|remastered|live).*', '')) %>%
group_by(base_album_name) %>%
filter(album_release_year == min(album_release_year)) %>%
mutate(base_album = tolower(album_name) == base_album_name,
num_albums = n(),
num_base_albums = sum(base_album)) %>%
filter((num_base_albums == 1 & base_album == 1) | ((num_base_albums == 0 | num_base_albums > 1) & row_number() == 1)) %>%
ungroup %>%
arrange(album_release_year) %>%
select(album_name, base_album_name, album_release_date)
albums %>%
mutate(base_album_name = str_replace_all(tolower(album_name), ' \\(.*(deluxe|international|version|edition|remastered|live).*\\)', ''),
base_album_name = str_replace_all(base_album_name, ' \\[.*(deluxe|international|version|edition|remastered|live).*\\]', ''),
base_album_name = str_replace_all(base_album_name, ':.*(deluxe|international|version|edition|remastered|live).*', ''),
base_album_name = str_replace(base_album_name, ' - .*(deluxe|international|version|edition|remastered|live).*', '')) %>%
group_by(base_album_name) %>%
filter(album_release_year == min(album_release_year)) %>%
mutate(base_album = tolower(album_name) == base_album_name,
num_albums = n(),
num_base_albums = sum(base_album)) %>%
filter((num_base_albums == 1 & base_album == 1) | ((num_base_albums == 0 | num_base_albums > 1) & row_number() == 1)) %>%
ungroup %>%
arrange(album_release_year) %>%
select(album_name, base_album_name, album_release_date)
runApp()
runApp()
runApp()
runApp()
runApp()
track_df
runApp()
albums
artist <- get_artists('nirvana') %>% slice(1)
albums <- get_albums(artist$artist_uri)
tracks <- get_tracks(artist, albums)
head(tracks)
my_colors <- ifelse(n_distinct(track_df$album_name) > 21, tol21rainbow, sample(tol21rainbow, n_distinct(track_df$album_name)))
track_df <- tracks
ifelse(n_distinct(track_df$album_name) > 21, tol21rainbow, sample(tol21rainbow, n_distinct(track_df$album_name)))
n_distinct(track_df$album_name) > 21
tol21rainbow
sample(tol21rainbow, n_distinct(track_df$album_name))
ifelse(n_distinct(track_df$album_name) > 21, tol21rainbow, sample(tol21rainbow, n_distinct(track_df$album_name)))
ifelse(n_distinct(track_df$album_name) > 21, tol21rainbow, sample(tol21rainbow, n_distinct(track_df$album_name)))
sample(tol21rainbow, n_distinct(track_df$album_name))
tol21rainbow
rm(list = ls())
runApp()
df <- read.csv('C:/Users/Charlie/Documents/transactions.csv')
head(df)
df %>%
mutate(date = as.Date(date, '%m/%d/%Y')) %>%
head
df %>%
mutate(date = as.Date(Date, '%m/%d/%Y')) %>%
head
df %>%
mutate(date = as.Date(Date, '%m/%d/%Y')) %>%
filter(date >= '2017-03-04', date <= '2017-03-11')
df %>%
mutate(date = as.Date(Date, '%m/%d/%Y')) %>%
filter(date >= '2017-03-04', date <= '2017-03-11') %>%
head
df %>%
mutate(date = as.Date(Date, '%m/%d/%Y')) %>%
filter(date >= '2017-03-04', date <= '2017-03-11') %>%
head %>%
summarise(sum(Amount))
df %>%
mutate(date = as.Date(Date, '%m/%d/%Y')) %>%
filter(date >= '2017-03-04', date <= '2017-03-11') %>%
summarise(sum(Amount))
df %>%
mutate(date = as.Date(Date, '%m/%d/%Y')) %>%
filter(date >= '2017-03-04', date <= '2017-03-11') %>%
arrange(-Amount)
df %>%
mutate(date = as.Date(Date, '%m/%d/%Y')) %>%
filter(date >= '2017-03-04', date <= '2017-03-11') %>%
arrange(-Amount) %>%
head
df %>%
mutate(date = as.Date(Date, '%m/%d/%Y')) %>%
filter(date >= '2017-03-04', date <= '2017-03-11') %>%
arrange(-Amount) %>%
filter(!Description %in% c('Re Data Systems', 'Transfer to CREDIT CARD', 'Transfer from CHASE COLLEGE', 'ATM Widthdrawal', 'Potomac Electric Utilitypmnt'))
summarise(sum(Amount))
df %>%
mutate(date = as.Date(Date, '%m/%d/%Y')) %>%
filter(date >= '2017-03-04', date <= '2017-03-11') %>%
arrange(-Amount) %>%
filter(!Description %in% c('Re Data Systems', 'Transfer to CREDIT CARD', 'Transfer from CHASE COLLEGE', 'ATM Widthdrawal', 'Potomac Electric Utilitypmnt')) %>%
summarise(sum(Amount))
df %>%
mutate(date = as.Date(Date, '%m/%d/%Y')) %>%
filter(date >= '2017-03-04', date <= '2017-03-11') %>%
arrange(-Amount) %>%
filter(!Description %in% c('Re Data Systems', 'Transfer to CREDIT CARD', 'Transfer from CHASE COLLEGE', 'ATM Widthdrawal', 'Potomac Electric Utilitypmnt')) %>%
head
df %>%
mutate(date = as.Date(Date, '%m/%d/%Y')) %>%
filter(date >= '2017-03-04', date <= '2017-03-11') %>%
arrange(-Amount) %>%
filter(!Description %in% c('Re Data Systems', 'Transfer to CREDIT CARD', 'Transfer from CHASE COLLEGE', 'ATM Withdrawal', 'Potomac Electric Utilitypmnt')) %>%
# head
summarise(sum(Amount))
df %>%
mutate(date = as.Date(Date, '%m/%d/%Y')) %>%
filter(date >= '2017-03-04', date <= '2017-03-11') %>%
arrange(-Amount) %>%
filter(!Description %in% c('Re Data Systems', 'Transfer to CREDIT CARD', 'Transfer from CHASE COLLEGE', 'ATM Withdrawal', 'Potomac Electric Utilitypmnt')) %>%
View
mine <- c('Re Data Systems',
'Transfer to CREDIT CARD',
'United',
'Transfer from CHASE COLLEGE',
'ATM Withdrawal',
'Potomac Electric Utilitypmnt')
mine <- c('Re Data Systems',
'Transfer to CREDIT CARD',
'United',
'Souvenir Morpho',
'Uber.com',
'New York Times',
'Spotify',
'ATM Fee',
'Transfer from CHASE COLLEGE',
'ATM Withdrawal',
'Potomac Electric Utilitypmnt')
df %>%
mutate(date = as.Date(Date, '%m/%d/%Y')) %>%
filter(date >= '2017-03-04', date <= '2017-03-11') %>%
arrange(-Amount) %>%
filter(!Description %in% mine) %>%
View
summarise(sum(Amount))
mine <- c('Re Data Systems',
'Transfer to CREDIT CARD',
'United',
'Souvenir Morpho',
'Uber.com',
'New York Times',
'Spotify',
'ATM Fee',
'Transfer from CHASE COLLEGE',
'ATM Withdrawal',
'Potomac Electric Utilitypmnt')
df %>%
mutate(date = as.Date(Date, '%m/%d/%Y')) %>%
filter(date >= '2017-03-04', date <= '2017-03-11') %>%
arrange(-Amount) %>%
filter(!Description %in% mine) %>%
summarise(sum(Amount))
558.46 / 2
df %>%
mutate(date = as.Date(Date, '%m/%d/%Y')) %>%
filter(date >= '2017-03-04', date <= '2017-03-13') %>%
arrange(-Amount) %>%
filter(!Description %in% mine) %>%
View
mine <- c('Re Data Systems',
'Transfer to CREDIT CARD',
'United',
'Souvenir Morpho',
'Uber.com',
'New York Times',
'Spotify',
'ATM Fee',
'Potomac Electric Utilitypmt',
'Bar Restaurante Exotica',
'Transfer from CHASE COLLEGE',
'ATM Withdrawal')
df %>%
mutate(date = as.Date(Date, '%m/%d/%Y')) %>%
filter(date >= '2017-03-04', date <= '2017-03-13') %>%
arrange(-Amount) %>%
filter(!Description %in% mine) %>%
View
df %>%
mutate(date = as.Date(Date, '%m/%d/%Y')) %>%
filter(date >= '2017-03-04', date <= '2017-03-13') %>%
arrange(-Amount) %>%
filter(!Description %in% mine) %>%
summarise(sum(Amount))
1202.21/2
df %>%
mutate(date = as.Date(Date, '%m/%d/%Y')) %>%
filter(date >= '2017-03-04', date <= '2017-03-13') %>%
arrange(-Amount) %>%
filter(!Description %in% mine) %>%
write.csv(file = 'costarica.csv')
getwd()
600-218
